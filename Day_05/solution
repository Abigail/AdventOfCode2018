#!/opt/perl/bin/perl

use 5.026;

use strict;
use warnings;
no  warnings 'syntax';

use experimental 'signatures';

my $input = "input";
open my $fh, "<", $input or die "Failed to open $input: $!";
my $polymer = <$fh>;
$polymer =~ s/\n+//g;

#
# Repeatedly remove 'Aa' / 'aA' units.
#
sub react ($polymer) {
    state $pat = join "|" => map {"$_\u$_|\u$_$_"} 'a' .. 'z';
    1 while $polymer =~ s/$pat//g;
    $polymer;
}

my $reduced_polymer = react $polymer;
say "Part 1: ", length react $reduced_polymer;

my $shortest = length $reduced_polymer;
#
# Foreach letter, remove it (either case), and perform the reaction.
# Remember the shortest result.
#
foreach my $unit ('a' .. 'z') {
    my $cleaned_polymer = $reduced_polymer =~ s/$unit//gir;
    my $length  = length react $cleaned_polymer;
    if ($length < $shortest) {
        $shortest = $length;
    }
}

say "Part 2: ", $shortest;

__END__
